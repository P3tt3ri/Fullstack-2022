{"ast":null,"code":"var _jsxFileName = \"/home/petteri/FullStack/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad,\n    avg,\n    posit\n  } = props;\n\n  if (good + neutral + bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", avg, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", posit, \" % \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [posit, setPosit] = useState(0);\n  useEffect(() => {\n    if (good + neutral + bad > 0) {\n      setAvg((good - bad) / (good + neutral + bad));\n      setPosit(good / (good + neutral + bad) * 100);\n    }\n  }, [good, neutral, bad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      avg: avg,\n      posit: posit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fcTfJDuaVyJz+Bi1LVD/lzX0rBY=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","useEffect","Button","onClick","text","Statistics","props","good","neutral","bad","avg","posit","App","setGood","setNeutral","setBad","setAvg","setPosit"],"sources":["/home/petteri/FullStack/part1/unicafe/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}> {text} </button> )\n\nconst Statistics = (props) => {\n  const {good, neutral, bad, avg, posit} = props\n  if (good+neutral+bad == 0 ) {\n    return <p>No feedback given</p>\n  }\n  return (\n    <div>\n      <h1>statistics</h1>\n      <p>good {good} </p>\t  \n      <p>neutral {neutral} </p>\t  \n      <p>bad {bad} </p>\t  \n      <p>all {good+neutral+bad} </p>\t  \n      <p>average {avg} </p>\t  \n      <p>positive {posit} % </p>\t  \n    </div>\n  )\n}\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [avg, setAvg] = useState(0)\n  const [posit, setPosit] = useState(0)\n\n  useEffect(\n    () => {\n    if (good+neutral+bad > 0)\t{  \n        setAvg((good-bad)/(good+neutral+bad))\n        setPosit((good/(good+neutral+bad))*100)\n    }    \n  }, [good, neutral, bad]);\t\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        onClick={() => setGood(good + 1)}\n        text='good'\n      />\n      <Button\n        onClick={() => setNeutral(neutral + 1)}\n        text='neutral'\n      />     \n      <Button\n        onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} avg={avg} posit={posit}/>\n    </div>     \t  \n  )\n}\n\nexport default App\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}