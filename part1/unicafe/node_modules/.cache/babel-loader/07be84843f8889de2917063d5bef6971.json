{"ast":null,"code":"var _jsxFileName = \"/home/petteri/FullStack/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = props => {\n  const {\n    text1,\n    stat,\n    text2\n  } = props; //  console.log(text1)\n  //  console.log(stat)\n  //  console.log(text2)\n\n  return (\n    /*#__PURE__*/\n    //      <p>{text1} {stat} {text2} </p>\t  \n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: text1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [stat, \" \", text2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad,\n    avg,\n    posit\n  } = props;\n\n  if (good + neutral + bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(good, neutral, bad);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"good\",\n        stat: good,\n        text2: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"neutral\",\n        stat: neutral,\n        text2: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"bad\",\n        stat: bad,\n        text2: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"all\",\n        stat: good + neutral + bad,\n        text2: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"average\",\n        stat: avg,\n        text2: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text1: \"positive\",\n        stat: posit,\n        text2: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [posit, setPosit] = useState(0);\n  useEffect(() => {\n    if (good + neutral + bad > 0) {\n      setAvg((good - bad) / (good + neutral + bad));\n      setPosit(good / (good + neutral + bad) * 100);\n    }\n  }, [good, neutral, bad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      avg: avg,\n      posit: posit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fcTfJDuaVyJz+Bi1LVD/lzX0rBY=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","useEffect","Button","onClick","text","StatisticLine","props","text1","stat","text2","Statistics","good","neutral","bad","avg","posit","console","log","App","setGood","setNeutral","setBad","setAvg","setPosit"],"sources":["/home/petteri/FullStack/part1/unicafe/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}> {text} </button> )\n\nconst StatisticLine = (props) => {\n  const { text1, stat, text2 } = props\n//  console.log(text1)\n//  console.log(stat)\n//  console.log(text2)\n  return (\n//      <p>{text1} {stat} {text2} </p>\t  \n      <tr>\n         <td>{text1}</td>\n         <td>{stat} {text2}</td>\n      </tr>\n)\n}\n  \nconst Statistics = (props) => {\n  const {good, neutral, bad, avg, posit} = props\n  if (good+neutral+bad == 0) {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n  console.log(good, neutral, bad)\n  return (\n    <div>\n      <h1>statistics</h1>\n      <table>\n      <StatisticLine text1=\"good\" stat={good} text2=\" \"/>\n      <StatisticLine text1=\"neutral\" stat={neutral} text2=\" \"/>\n      <StatisticLine text1=\"bad\" stat={bad} text2=\" \"/>\n      <StatisticLine text1=\"all\" stat={good+neutral+bad} text2=\" \"/>\n      <StatisticLine text1=\"average\" stat={avg} text2=\" \"/>\n      <StatisticLine text1=\"positive\" stat={posit} text2=\"%\"/>\n      </table>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [avg, setAvg] = useState(0)\n  const [posit, setPosit] = useState(0)\n\n  useEffect(\n    () => {\n    if (good+neutral+bad > 0)\t{  \n        setAvg((good-bad)/(good+neutral+bad))\n        setPosit((good/(good+neutral+bad))*100)\n    }    \n  }, [good, neutral, bad]);\t\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        onClick={() => setGood(good + 1)}\n        text='good'\n      />\n      <Button\n        onClick={() => setNeutral(neutral + 1)}\n        text='neutral'\n      />     \n      <Button\n        onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} avg={avg} posit={posit}/>\n    </div>     \t  \n  )\n}\n\nexport default App\n\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC,OAAF;IAAWC;EAAX,CAAD;EAAA,oBACb;IAAQ,OAAO,EAAED,OAAjB;IAAA,gBAA4BC,IAA5B;EAAA;IAAA;IAAA;IAAA;EAAA,QADa;AAAA,CAAf;;KAAMF,M;;AAGN,MAAMG,aAAa,GAAIC,KAAD,IAAW;EAC/B,MAAM;IAAEC,KAAF;IAASC,IAAT;IAAeC;EAAf,IAAyBH,KAA/B,CAD+B,CAEjC;EACA;EACA;;EACE;IAAA;IACF;IACM;MAAA,wBACG;QAAA,UAAKC;MAAL;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAA,WAAKC,IAAL,OAAYC,KAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAOD,CAZD;;MAAMJ,a;;AAcN,MAAMK,UAAU,GAAIJ,KAAD,IAAW;EAC5B,MAAM;IAACK,IAAD;IAAOC,OAAP;IAAgBC,GAAhB;IAAqBC,GAArB;IAA0BC;EAA1B,IAAmCT,KAAzC;;EACA,IAAIK,IAAI,GAACC,OAAL,GAAaC,GAAb,IAAoB,CAAxB,EAA2B;IACzB,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;EACDG,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkBC,OAAlB,EAA2BC,GAA3B;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACA,QAAC,aAAD;QAAe,KAAK,EAAC,MAArB;QAA4B,IAAI,EAAEF,IAAlC;QAAwC,KAAK,EAAC;MAA9C;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,aAAD;QAAe,KAAK,EAAC,SAArB;QAA+B,IAAI,EAAEC,OAArC;QAA8C,KAAK,EAAC;MAApD;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA,QAAC,aAAD;QAAe,KAAK,EAAC,KAArB;QAA2B,IAAI,EAAEC,GAAjC;QAAsC,KAAK,EAAC;MAA5C;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA,QAAC,aAAD;QAAe,KAAK,EAAC,KAArB;QAA2B,IAAI,EAAEF,IAAI,GAACC,OAAL,GAAaC,GAA9C;QAAmD,KAAK,EAAC;MAAzD;QAAA;QAAA;QAAA;MAAA,QAJA,eAKA,QAAC,aAAD;QAAe,KAAK,EAAC,SAArB;QAA+B,IAAI,EAAEC,GAArC;QAA0C,KAAK,EAAC;MAAhD;QAAA;QAAA;QAAA;MAAA,QALA,eAMA,QAAC,aAAD;QAAe,KAAK,EAAC,UAArB;QAAgC,IAAI,EAAEC,KAAtC;QAA6C,KAAK,EAAC;MAAnD;QAAA;QAAA;QAAA;MAAA,QANA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAxBD;;MAAML,U;;AA0BN,MAAMQ,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACY,OAAD,EAAUQ,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACa,GAAD,EAAMQ,MAAN,IAAgBrB,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAM,CAACc,GAAD,EAAMQ,MAAN,IAAgBtB,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAM,CAACe,KAAD,EAAQQ,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;EAEAC,SAAS,CACP,MAAM;IACN,IAAIU,IAAI,GAACC,OAAL,GAAaC,GAAb,GAAmB,CAAvB,EAA0B;MACtBS,MAAM,CAAC,CAACX,IAAI,GAACE,GAAN,KAAYF,IAAI,GAACC,OAAL,GAAaC,GAAzB,CAAD,CAAN;MACAU,QAAQ,CAAEZ,IAAI,IAAEA,IAAI,GAACC,OAAL,GAAaC,GAAf,CAAL,GAA0B,GAA3B,CAAR;IACH;EACF,CANQ,EAMN,CAACF,IAAD,EAAOC,OAAP,EAAgBC,GAAhB,CANM,CAAT;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,OAAO,EAAE,MAAMM,OAAO,CAACR,IAAI,GAAG,CAAR,CADxB;MAEE,IAAI,EAAC;IAFP;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,MAAD;MACE,OAAO,EAAE,MAAMS,UAAU,CAACR,OAAO,GAAG,CAAX,CAD3B;MAEE,IAAI,EAAC;IAFP;MAAA;MAAA;MAAA;IAAA,QANF,eAUE,QAAC,MAAD;MACE,OAAO,EAAE,MAAMS,MAAM,CAACR,GAAG,GAAG,CAAP,CADvB;MAEE,IAAI,EAAC;IAFP;MAAA;MAAA;MAAA;IAAA,QAVF,eAcE,QAAC,UAAD;MAAY,IAAI,EAAEF,IAAlB;MAAwB,OAAO,EAAEC,OAAjC;MAA0C,GAAG,EAAEC,GAA/C;MAAoD,GAAG,EAAEC,GAAzD;MAA8D,KAAK,EAAEC;IAArE;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAjCD;;GAAMG,G;;MAAAA,G;AAmCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}